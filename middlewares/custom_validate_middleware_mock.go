// Code generated by MockGen. DO NOT EDIT.
// Source: middlewares/custom_validate_middleware.go

// Package mocks is a generated GoMock package.
package middlewares

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCustomValidatorInterface is a mock of CustomValidatorInterface interface.
type MockCustomValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomValidatorInterfaceMockRecorder
}

// MockCustomValidatorInterfaceMockRecorder is the mock recorder for MockCustomValidatorInterface.
type MockCustomValidatorInterfaceMockRecorder struct {
	mock *MockCustomValidatorInterface
}

// NewMockCustomValidatorInterface creates a new mock instance.
func NewMockCustomValidatorInterface(ctrl *gomock.Controller) *MockCustomValidatorInterface {
	mock := &MockCustomValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockCustomValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomValidatorInterface) EXPECT() *MockCustomValidatorInterfaceMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockCustomValidatorInterface) Validate(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockCustomValidatorInterfaceMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockCustomValidatorInterface)(nil).Validate), arg0)
}
